import DynamicLoader from "../src/dynamicLoader";
import {
    ILoaderConf, IProcessorFnFactory, IProcessorFnFactoryInstance, IProcessorFnMaker, IService, ProcessorFn,
} from "../src/types";

loadAndCallServices().then(() => {process.exit();});

async function loadAndCallServices() {
    const conf: ILoaderConf = await DynamicLoader.loadJson("./config/services.json");
    const loader = new DynamicLoader(conf);

    let processorFn: ProcessorFn;

    const serviceWithFn: IService = await loader.loadService("function.service");
    processorFn = serviceWithFn.processor as ProcessorFn;
    console.log(`** processorType: ${serviceWithFn.processorType}`);
    console.log(await processorFn({example: 'ProcessorFn'}));

    const serviceWithFnMaker: IService = await loader.loadService("maker.service");
    let maker = serviceWithFnMaker.processor as IProcessorFnMaker;
    processorFn = maker({comment: "more serviceWithFnMaker config options"}) as ProcessorFn;
    console.log(`** processorType: ${serviceWithFnMaker.processorType}`);
    console.log(await processorFn({example: "ProcessorFn generated by ProcessorFnMaker"}));

    const serviceWithFnFactory: IService = await loader.loadService("factory.service");
    let FnFactory = serviceWithFnFactory.processor as IProcessorFnFactory;
    let factory: IProcessorFnFactoryInstance = new FnFactory(
        {comment: "more serviceWithFnFactory config options"},
        {comment: "serviceWithFnFactory resources"},
    );
    console.log(`** processorType: ${serviceWithFnFactory.processorType}`);
    console.log(await factory.processor({example: "1st ProcessorFn generated by ProcessorFnFactory"}));
    console.log(await factory.processor({example: "2nd ProcessorFn generated by ProcessorFnFactory"}));
}
